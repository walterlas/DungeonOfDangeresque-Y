#!yab

dim level(31,81)
dim monstername$(35)
dim monsterhp(35)
dim monsterhm(35)

newgame = true
onload = true
gameloop = true

difficulty = 1
maxlevels = 30
columns = 9

sub delay(seconds)
	pause(seconds)
end sub

sub cls()
	local x
//	cls()
	for x = 1 to 25
		print " "
	next x
end sub

sub rnd()
	r = ran()
	return r
end sub

sub getDifficulty()
	d	= 0
	while (d<1 or d>2)
		print "Difficulty Level: 1 = Moderate, 2 = Hard"
		input "Enter Difficulty level > " n
		d = int(n)
	wend
	return d
end sub

sub getIndex(x,y)
	i	=	x+(columns*y)
	return i
end sub

sub getName$()
	input "Enter your character's name > " pname$
#	pname$ = str$(n)
	return pname$
end sub

sub flourish()
	local aa
	
	for aa = 1 to 301
		print "*        %";
	next aa
	delay(2)
	print
end sub

sub didMove()
	local moved
	if playerx = playeroldx and playery=playeroldy then
		moved = false
	else
		moved = true
	endif
	return moved
end sub

sub fillArray(endtime)
	local col,row,debug,dothis,lvl
	debug = false
	col = 8
	row = 8
	
	if debug = true then 
		Print "Starting room placement"
	endif 
	
	for dothis = 1 to endtime
		for i = 0 to 81
			level(dothis,i) = int(rnd()*7)+1
		next i
	
		h = int(rnd()*3)+1
		for n = 1 to h
			x = int(rnd()*col)+1
			y = int(rnd()*row)+1
			i = getIndex(x,y)
			level(dothis,i) = 8
		next n
	
		s = int(rnd()*4+1)+2
		for n = 1 to s
			x = int(rnd()*col)+1
			y = int(rnd()*row)+1
			i = getIndex(x,y)
			level(dothis,i) = 9
		next n
	
		if debug = true then
			print "Showing level "+str$(dothis)
			idx = 1
			for x = 1 to 8
				for y = 1 to 8
					print level(dothis,idx);
					idx = idx + 1
				next y
				print
			next x
			print "-----------------------------------------"
		endif
	next dothis
end sub

sub monsterSetup()
	mlevel = 0
	for i = 1 to 34
		read monstername$(i)
	next i
	for i = 1 to 34
		read monsterhp(i)
	next i
	for i = 1 to 34
		read monsterhm(i)
	next i
	
	data "Large Dragon","Hideous Ghoul","Lizard Man","Manticore","Purple Worm","Deadly Cobra","Mad Elf","Clay Man","Hairy Beast","Mad Dwarf","Zombie","Berserker","Giant Scorpion","Giant Cockroach","Doppleganger","Giant Fire Beetle","Giant Ant","Giant Tick","Mummy","Nasty Orc","Skeleton","Troll","Goblin","Vampire Bat","Creeping Blob","Mad Dog","Large Spider","Black Cat","Man Eating Plant","Hydra","Gelatinous Cube","Giant Centipede","Giant Rat","Shadow"
	
	data 6,5,4,6,6,5,5,4,5,4,4,5,6,4,5,1,1,2,3,2,1,3,3,3,3,2,3,2,1,3,2,1,2,2
	
	data 12,10,8,12,12,10,10,8,10,8,8,10,12,8,10,2,2,4,6,4,2,6,6,6,6,4,6,4,2,6,4,2,4,4
	
end sub

sub getRating$(r)
	local rating$
	local rate$
	
	rating$ = name$ + " - " + str$(r) + " - " + killedby$ + " - "
	if r <= -400 then
		rating$ = rating$ + "Incompetent Serf"
	elsif r <= -100 then
		rating$ = rating$ + "Weakling"
	elsif r < 0 then
		rating$ = rating$ + "Apprentice"
	elsif r < 100 then
		rating$ = rating$ + "Halfling"
	elsif r < 200 then
		rating$ = rating$ + "Foot Soldier"
	elsif r < 600 then
		rating$ = rating$ + "Warrior"
	elsif r < 900 then
		rating$ = rating$ + "Great Warrior"
	elsif r < 1500 then
		rating$ = rating$ + "Swordsman"
	elsif r < 2500 then
		rating$ = rating$ + "Magic Swordsman"
	elsif r >= 2500 then
		rating$ = rating$ + "Dungeon Master"
	endif
	return rating$
end sub

sub showMap()
	local debug
	debug = false
	
	cls()
	if hasmap = false then
		print "You pat your pockets looking for your map"
		print "before you remember you don't have one."
		delay(1)
	else
		print "The Dungeon of Danger Map: Level " + str$(currentlevel)
		print " "
		for q = 1 to 8
			for n = 1 to 8
				if playerx = n and playery = q then
					print "PL ";
				else
					rm = level(currentlevel,getIndex(n,q))
					switch rm
						case 1: print "O  ";:break
						case 2: print "C  ";:break
						case 3: print "M  ";:break
						case 4: print "M  ";:break
						case 5: print "?  ";:break
						case 6: print "NS ";:break
						case 7: print "EW ";:break
						case 8: print "?  ";:break
						case 9: print "UP ";:break
					end switch
				endif
			next n
			print " "
		next q
	endif
		
	input "Press Enter" dummy$
//	a$ = inkey$
end sub

sub newGame$()
	local looper
	local pin$
	
	looper = true
	while (looper = true)
		print "Game Over"
		print "Would you like to play again?"
		input "Enter (Y)es or (N)o> " pin$
//		pin$ = inkey$
		if upper$(pin$) = "Y" or upper$(pin$) = "N" then
			looper = false
		endif
	wend
	return(upper$(pin$))
end sub

sub atWall(dir$)
	print "You are at the " + dir$ + " wall"
	print "You cannot pass through."
end sub

sub decHP(x)
	playerhp = playerhp - x
	if playerhp <= 0 then
		playerdead = true
	endif
//	return(playerhp)
end sub

sub incHP(x)
	playerhp = playerhp + x
end sub

sub turnEnd()
	turnstaken = turnstaken + 1
	turnsleft = turnsleft - 1
	if turnsleft = 0 then
		movesdepleted = true
	endif
	if playerhp < startinghp then
		healthturn = healthturn + 1
		if healthrun > 5 then
			playerhp = playerhp + int(rnd()*5)+1
			if playerhp > startinghp then
				playerhp = startinghp
				print "You feel like your old self again."
			else
				healthturn = 0
				print "You're feeling slightly better."
			endif
		endif
	else
		healthturn = 0
	endif
end sub

sub move(c,d)
	playeroldx = playerx
	playeroldy = playery
	playerx = c
	playery = d
end sub

sub hasMoved()
	local rval
	
	if playerx = playeroldx and playery = playeroldy then
		rval = false
	else
		rval = true
	endif
	return rval
end sub

sub upLevel()
	haskey = false
	print "Your Enchanted Key melts in the lock!"
	if hasmap = true then
		hasmap = false
		print "Your map turns to dust!"
	endif
	if playerhp < startinghp then
		playerhp = startinghp
		print "You feel stronger. . . . . "
		delay(1)
		print "Your hit-points are restored to " + str$(startinghp)
		print " "
	endif
	monsterskilled = 0
	targetKills = int(rnd()*4+1)+4
	print "You are now on level " + str$(currentlevel)
	delay(2)
end sub

sub reset(d)
	playerx 		= int(rnd()*8+1)
	playery 		= int(rnd()*8+1)
	startinghp 		= 20+(int(rnd()*15)+1)/d
	movesdepleted 	= false
	hasmap			= false
	haskey			= false
	movesleft		= 100
	gold			= 500
	monsterkilled	= 0
	totalkills		= 0
	playerhp		= startinghp
end sub

sub getMap()
	print "You search the chamber and"
	delay(1)
	print "You. . . . . find a map"
	hasmap = true
end sub

sub checkKey()
	if monsterskilled > targetKills then
		haskey = true
		print "You look to the ground. . . . . . "
		print "and find the Enchanted Key!"
		delay(2)
	endif
end sub

// This will probably need to be changed
sub findExits()
	dim a(2)
	
	location = getIndex(playerx,playery)
	thisroom = level(currentlevel,location)
	foundexit= false
	
	direction = int(rnd()*4)+1
	
	if direction = 1 and (playery-1 <> 0 and thisroom <> 7) then
		a(1) = playery -1
	elsif direction = 3 and (playery+1 <> 9 and thisroom <> 7) then
		a(1) = playery + 1
	elsif direction = 2 and (playerx+1 <> 9 and thisroom <> 6) then
		a(0) = playerx + 1
	elsif direction = 4 and (playery-1 <> 0 and thisroom <> 6) then
		a(0) = playerx -1
	endif
	return a()
end sub
//

sub gameWon()
	local gg
	local ratenum
	local rating$
	
	print "You found your way . . . "
	print ". . . out of the Dungeon of Dangeresque!"
	print 
	print "You have acquired " + str$(gold) + " gold pieces."
	gg = gold + 100
	ratenum = int((gg*monsterskilled-7000+1)/turnstaken)
	killedby$ = "Left the Dungeon!"
	rating$ = getRating$(ratenum)
	print "Game rating is: "
	print rating$
	print "You took " + str$(turnstaken) + " turns to find the way out."
	print "Along the way, you killed " + str$(totalkills) + " monsters."
	exit
end sub

sub playerDead()
	local gg
	local r
	local f$
	
	delay(2)
	cls()
	if movesdepleted = true then
		print playername$ + ", you have run out of moves."
	else
		print "Your hit-points have been depleted."
	endif
	print "Unfortunately, you just died."
	delay(2)
	w = int(rnd()*6+1)
	lives = lives - 1
	if movesdepleted = false and w>=3 and lives > 0 then
		delay(1)
		playerhp = startinghp
		flourish()
		print
		print "You have entered . . . a zone"
		print "between . . . .life and death"
		print
		delay(1)
		print "I, the Ancient Wizard"
		print "will restore you hit-points to " + str$(startinghp)
		print "and. . . you have one more"
		print "chance in the Dungeon."
		print
		turnsleft = int(rnd()*15+1)*monsterskilled+10
		print "You shall have " + str$(turnsleft) + " moves"
		print "to find your way out"
		print "of the Dungeon of Danger."
		delay(3)
		flourish()
		playerdead = false
	else
		print "You lost all your gold and were"
		print ". . . unable to meet the demands of"
		print ". . . . . THe Dungeon of Danger"
		print
		print
		print "Better luck next time."
		gg = gold+100
		r = int((gg*monsterskilled-7000+1)/turnstaken)
		rating$ = getRating$(r)
		print "Your rating is:"
		print rating$
		f$ = newGame$()
		if f$="Y" then
			newgame = true
			playerdead = false
			gold = 0
		else
			exit
		endif
	endif
end sub

sub teleportTrap()
	static teleportx
	static teleporty
	dim runto(2)
	
	if teleportactive = false then
		teleportactive = true
		print "You activated some sort of trap. . . "
		delay(1)
		teleportx = playerx
		teleporty = playery
		playerx = int(rnd()*8+1)
		playery = int(rnd()*8+1)
		print "Suddenly, you feel dizzy and ass out."
		delay(2)
		flourish()
		print "When you wake up . . . you find"
		print "that you were . . . . teleported"
		print "to an unknown location. . . . . "
		delay(2)
		idx = getIndex(playerx,playery)
		runto = findExits()
		playeroldx = runto(0)
		playeroldy = runto(1)
	else
		teleportactive = false
		print "You reactivated a teleportation trap"
		delay(1)
		flourish()
		delay(1)
		print "You end up back in the area where"
		print ". . . you last teleported from"
		playerx = teleportx
		playery = teleporty
	endif
end sub

sub deadMonster()
	local tempgold
	local givegold
	
	delay(2)
	print
	print "You have killed the " + monstername$
	print
	if (inroom < 6 and inroom <> 2) then
		idx = getIndex(playerx,playery)
	endif
	level(currentlevel,idx) = 1
	tempgold = 500
	
	if inroom >= 6 then
		tempgold = 250
	endif
	givegold = int(rnd()*gold/currentlevel+1)+75
	
	if inroom = 2 then
		givegold=givegold*2
	endif
	gold = gold + givegold
	delay(2)
	print "You search the area . . . . "
	delay(2)
	print "And find " + str$(givegold) + " gold pieces"
	print
	monsterskilled = monsterskilled + 1
	totalkills = totalkills + 1
	if haskey = false then
		checkKey()
	endif
end sub

sub monsterAttacks()
	local w
	local n

	print
	w = int(rnd()*7+1)
	print ". . . . . . . It attacks you"
	if w <= 2 then
		print "But . . . . . . it misses"
		delay(2)
	else
		w = int(rnd()*6+1)
		if w >= 3 then
			n = int(rnd()*playerhp*difficulty+1)
		else
			n = int(rnd()*playerhp/currentlevel+1)+int(rnd()*playerhp/currentlevel+1)
		endif
		if monsterhm <= 2 then
			n = 1
		endif
		decHP(n)
		if playerdead = true then
			return
		endif
		print "And it does " + str$(n) + " hit-points of damage"
		print
		print "You have . . . " + str$(playerhp) + " hit-points left"
		print
	endif
end sub

sub attackMonster()
	local n
	
	cls()
	print "You attack the " + monstername$
	delay(1)
	print "With a swing of your sword"
	n = int(rnd()*5+1)+int(rnd()*monsterskilled/2+1)
	monsterhm = monsterhm - n
	if monsterhm <= 0 then
		deadMonster()
		return monsterhm
	endif
	print "You do "+ str$(n)+" hit-points of damage"
	delay(1)
	print "It has . . "+str$(monsterhm)+" hit-points left"
	delay(1)
	return monsterhm
end sub

sub flee()
	local w
	local n
	
	w = int(rnd()*4+1)
	playerx = playeroldx
	playery = playeroldy
	print "You quickly run out . . . "
	if teleportactive = true then
		teleportTrap()
	endif
	n = int(rnd()*2+1)
	delay(2)
	if w >= 3 then
		decHP(n)
		print "As you leave . . . "
		print "The "+monstername$+" attacks"
		delay(1)
		if playerdead = true then
			return
		endif
		print "And it does "+str$(n)+" hit-points of damage"
		delay(2)
	endif
end sub

sub fightOrFlee$()
	local f$
	print
	input "Will you (F)ight or (R)un? " f$
	return upper$(f$)
end sub

sub doBattle()
	local battleloop
	local w
	local f$
	local check
	
	battleloop = true
	killedby$ = monstername$
	delay(2)
	print
	w = int(rnd()*4+1)
	if w > 2 then
		delay(1)
		monsterAttacks()
		if playerdead = true then
			battleloop = false
			return
		endif
	endif
	while (battleloop = true)
		f$ = fightOrFlee$()
		if f$ = "F" then
			check = attackMonster()
			if check <= 0 then
				battleloop = false
				continue 
			else
				monsterAttacks()
				if playerdead = true then
					battleloop = false
					return
				endif
			endif
		else
			flee()
			battleloop = false
		endif
	wend
end sub

sub emptyChamber()
	local w
	
	w = int(rnd()*2+1)
	if w = 2 then
		print "You are in a damp and misty"
	else
		print "You are in a cold and dark"
	endif
	print ". . . . . empty chamber."
	print
end sub

sub intoPit()
	
	print "You fell into a deep . . . pit"
	delay(1)
	print "Luckily. . . you didn't get hurt"
	print
	delay(1)
	print "But in climbing out . . . "
	print "You . . . . . . . .lost"
	print "all of your gold pieces"
	print
	gold = 0
	if haskey = true then
		print "But. . . you still have your Enchanted Key"
	endif
end sub

sub trapDoor()
	local trap
	
	print "You activated a . . . trap door"
	delay(2)
	trap = int(rnd()*4+1)*difficulty
	if trap > 4 then
		print "You fell through . . . "
		delay(2)
		print "And landed badly."
		killedby$ = "Trap Door"
		playerdead = true
		return
	elsif trap = 4 then
		if currentlevel > 1 then
			intoPit()
			return
		endif
		currentlevel = currentlevel + 1
		if currentlevel > maxlevel then
			currentlevel = maxlevel
		endif
		print
		print "You fell thru to level "+str$(currentlevel)+" . . . and"
		delay(1)
		print "you . . . . . . . .lost"
		print "all of your gold pieces"
		gold = 0
		if haskey = true then
			print "But you still have your Enchanted Key"
		endif
		return
	else
		print "But . . . you caught yourself"
		print "from falling"
	endif
end sub

sub goUpstairs()
	cls()
	if inroom <> 9 then
		print "You attempt to walk up a stair that doesn't exist."
		print "You fall flat on your face."
	else
		if haskey = true then
			currentlevel = currentlevel - 1
			print "You walk up the stairway and come to a heavy door with an ornate lock."
			delay(1)
			print "Your Enchanted Key. . . opens the lock!"
			delay(1)
			if currentlevel = 0 then
				gameWon()
			else
				upLevel()
			endif
		else
			print "You walk all the way up the stairs and find a heavy door with an ornate lock."
			print "You jiggle the handle, but the door is, indeed, locked."
			print "With a sigh,  you remember that you don't have an Enchanted Key,"
			print "so you walk all the way down the stairs again."
			delay(1)
		endif
	endif
end sub

sub corridor()
	local w,debug
	debug = false
	
	if (playerx = playeroldx) and (playery = playeroldy) then
		return
	endif
	
	if (inroom = 6) and ((playerx -1 = playeroldx) or (playerx+1=playeroldx)) then
		print "The door closes and locks behind you"
	elsif (inroom = 7) and ((playery-1 = playeroldy) or (playery+1 = playeroldy)) then
		print "The door closes and locks behind you"
	endif
	
	delay(1)
	w = int(rnd()*8+1)
	if w >= 7 then
		w = int(rnd()*4+1)+30
		if debug = true then
			print "Hall monster ID: " + str$(w) + ":"+monstername$(w)
		endif
		monstername$ = monstername$(w)
		monsterhp = monsterhp(w)
		monsterhm = monsterhm(w)
		print "There is something lurking"
		print "in this corridor . . . . ."
		delay(1)
		print ". . . . Beware"
		delay(1)
		print "It is a . . . . . "+monstername$+" . . "
		delay(1)
		doBattle()
		return
	elseif w = 8 then
		if haskey = false then
			haskey = true
			print "You notice a shiny object . . . . "
			print ". . . . at your feet"
			delay(1)
			print "You pick it up and find that . . . "
			print "It is the Enchanted Key . . . . . "
			delay(1)
			print "But you weren't careful. . . . "
			delay(1)
		endif
		print "You activated some sort of trap . . . "
		delay(1)
		teleportTrap()
	endif
end sub

sub nsCorridor()
	cls()
	print "You are in a North-South corridor"
	print "You can only go North or South"
	if didMove() = true then
		corridor()
	endif
end sub

sub ewCorridor()
	cls()
	print "You are in an East-West corridor"
	print "You can only go East or West"
	if didMove() = true then
		corridor()
	endif
end sub

sub findVial()
	local h
	local v
	local d$
	local dl
	
	print "You look around. . . "
	delay(2)
	v = int(rnd()*7+1)
	if v < 5 then
		print ". . . But you don't see anything of interest."
		return
	endif
	print "On the ground, at your feet, is a vial."
	delay(2)
	print "You pick up the vial . . and see that"
	print "It contains . . . a milky liquid."
	input "Would you like a drink? " d$
	print "You take a drink. . . "
	dl = int(rnd()*6+1)
	delay(2)
	if dl >= 3 then
		h = int(rnd()*10/difficulty+1)+(6/difficulty)
		incHP(h)
		print "It was a white magic potion. . . "
		print "Which increased your hit-points by "+str$(h)
	elsif dl = 2 then
		print "The liquid had no effect on you"
	else
		h = int(rnd()*6+1)*difficulty
		decHP(h)
		print "You feel a little funny. . ."
		delay(2)
		if playerdead = true then
			return
		endif
		print "It was a black magic potion . . . "
		print "Which decreased your hit-points by "+str$(h)
	endif
end sub

sub somethingJumps()
	cls()
	print "Suddenly. . . something jumps. . . "
	print "in front of you . . . . . "
	delay(2)
end sub

sub thief()
	local idx,gg,surprise
	
	cls()
	print "There is a thief in this chamber"
	idx = getIndex(playerx,playery)
	level(currentlevel,idx) = 1
	delay(1)
	gg = int(rnd()*500/currentlevel+1)

	if gold - gg < 0 then
		gg = gold
	endif
	
	surprise = int(rnd()*8+1)
	
	if surprise <= 3 then
		print
		print "You surprise the thief. . . . "
		delay(1)
		print "As he runs out, he drops . . . . "
		gg = int(rnd()*400/currentlevel+1)
		print ". . . "+str$(gg)+" gold pieces"
		gold = gold + gg
		print "You pick up the gold for yourself"
		print
	else
		print ". . . . . . . He surprises you"
		delay(2)
		print "As he quickly passes by you, he"
		print "snatches . . . "+str$(gg)+" gold pieces"
		gold = gold -gg
	endif

	if hasmap = true then
		return
	else
		ma = int(rnd()*4+1)
		if ma <= 2 then
			hasmap = true
			getMap()
		endif
	endif
end sub

sub fallInPool()
	local w, gg
	
	cls()
	print "You fall into a deep . . . dark"
	delay(1)
	print ". . . pool. . . of murky water"
	delay(2)
	
	w = int(rnd()*6+1)
	print
	
	if w >= 5 then
		monstername$	= "Gill Monster"
		monsterhp		= 8
		monsterhm		= 14
		print "The water is. . . icy cold"
		delay(2)
		print "Suddenly. . you feel something warm"
		print ". . . rub against your legs. . . . "
		delay(2)
		print
		print "It then surfaces next to  you. . . "
		print " and you see that it is a slimy . ."
		print ". . . "+monstername$+" . . ready to attack"
		delay(2)
		print
		print "As you climb out. . . "
		delay(2)
		doBattle()
	elsif w >= 3 then
		print "The water is steaming. . . . hot"
		delay(2)
		print
		print "As you quickly jump out . . . . "
		gg = int(rnd()*500+1)+100
		if gold-gg < 0 then
			gg = gold
		endif
		gold = gold -gg
		print "You drop "+str$(gg)+" gold pieces"
		print "Which fall into the pool . . . lost"
		delay(2)
	else
		print "It is warm and soothing. . And"
		delay(2)
		print "You climb out. . . feeling relaxed"
		print
	endif
end sub

sub giantSpider()
	monstername$ = "Giant Spider"
	monsterhp	 = 6
	monsterhm	 = 12
	print "It's a huge man-sized crawling"
	print ". . . . . . SPIDER . . . . . ."
	delay(2)
	print ". . . . . . . and . . . . . . "
	doBattle()
end sub

sub mrWizard()
	local hp,gg
	
	print "Halt. . . I am the Ancient Wizard"
	print "I will not harm you . . . . . "
	delay(2)
	print
	gg = int(rnd()*300+1)+100
	print
	print "I give you . . . "+str$(gg)+" gold pieces"
	print "Out of the good will and friendship"
	print
	hp = int(rnd()*10/difficulty+1)+(6/difficulty)
	incHP(hp)
	print "Also, I will increase. . . "
	print "Your hit-points by "+str$(hp)+"."
	delay(2)
end sub

sub darkWizard()
	monstername$	= "Dark Wizard"
	monsterhp		= 8
	monsterhm		= 14
	
	cls()
	print "Do not pass. . . I am the "+monstername$
	delay(2)
	print "And I will hack you to pieces. . . "
	delay(2)
	doBattle()
end sub

sub occupiedCavern()
	local w
	
	if inroom = 4 then
		w = int(rnd()*15+1)+15
	else
		w = int(rnd()*15+1)
	endif
	print
	print "There is something lurking. . . "
	print ". . . . in this chamber . . . . "
	delay(1)
	print ". . . . . . . . . . . . .Beware "
	delay(1)
	print
	monstername$ = monstername$(w)
	monsterhp	 = monsterhp(w)
	monsterhm	 = monsterhm(w)
	print "It is a . . . . . "+monstername$+". . "
	delay(2)
	doBattle()
end sub

sub hiddenCavern()
	local w
	
	print "You stumbled onto . . . . . "
	print "A Hidden Cavern"
	delay(2)
	print
	findVial()
	if playerdead = true then
		playerDead()
	endif
	w = int(rnd()*9+1)
	delay(2)
	
	if w > 3 then
		print "The cavern seems empty. . . "
		return
	endif
	
	print "But wait. . . Before you proceed"
	delay(2)
	print
	print "You hear a noise off in the distance"
	delay(2)
	print "Cautiously, you walk towards the sound."
	delay(2)
	
	w = int(rnd()*4+1)
	if (w = 1) and (playerhp<startinghp) then
		somethingJumps()
		mrWizard()
	elsif (w = 2) then
		somethingJumps()
		giantSpider()
	elsif (w = 4) and (currentlevel > 1) then
		fallInPool()
	else
		somethingJumps()
		darkWizard()
	endif
end sub

sub stairs()
	print "You are at a stairway"
	print ". . . . . going up"
end sub

sub introTop()
	cls()
	print"The Dungeon of Dangeresque"
	print"   For Yab (or Yabasic)"
	print"(c) 1980 by Howard Berenbon"
	print"Adapted from Atari BASIC verson"
	print"Of 'Dunger of Danger'"
	print" "
	print"A Fantasy Game"
	print"=-=-=-=-=-=-=-=-=-=-"
	print"You will be teleported to..."
	print" "
end sub

sub introMiddle()
//	print "The. . . "
//	print "Dungeon of Dangeresque!"
	local intro
	
//	intro = open("./intro.txt","r")
	open "intro.txt" for reading as #1
	while (not eof(1))
		 line input #1 iline$
		 print iline$
	wend
	close #1
end sub

sub introBottom()
	print "You carry a magic sword and "+str$(gold)+" gold pieces with you."
	print "Your hit-point value is "+str$(playerhp)+"."
	print "If it reaches zero, you will die . . . So be careful!"
	delay(1)
	print name$+" . . . You are on your way to the . . ."
	delay(3)
	open "dod-logo.txt" for reading as #1
	while (not eof(1))
		line input #1 iline$
		print iline$
	wend
	close #1
#	cls()
	print
	print "You have arrived at . . . "
	print "The Dungeon of Danger . . . Level "+str$(currentlevel)
	print " "
	print "You will encounter monsters and thieves and . . . gold."
	print "Good luck!"
	delay(4)
end sub

sub showCommands$()
	local m$,debug
	debug = false
	
	if debug = true then
		print "User: " + name$
		print "Location = "+str$(playerx)+","+str$(playery)
		print "Total Kills: "+str$(totalkills)+" This Level: "+str$(monsterskilled)+" Target: "+str$(targetKills)
	endif
#	print
	print "Hit-Points: "+str$(playerhp)+" || Gold: "+str$(gold)
	print "(N)orth, (E)ast, (S)outh, (W)est"
	print "(U)p, (M)ap"
	input "(Command)> " m$
	return upper$(m$)
end sub

while (gameloop = true)
	debug = false
	
	if onload = true then
		introTop()
		monsterSetup()
		onload = false
	endif
	
	if newgame = true then
		introMiddle()
		difficulty 	= getDifficulty()
		maxlevel	= difficulty*10
		currentlevel= maxlevel
		
		fillArray(maxlevel)
		name$=getName$()
		reset(difficulty)
		teleportactive	= false
		introBottom()
		idx = getIndex(playerx,playery)
		level(currentlevel,idx) = 1
		inroom = level(currentlevel,idx)
		targetKills = int(rnd()*4+1)+4
		newgame = false
		killedby$ = " "
		lives = 1
		
	endif
	
	cls()
	
	switch (inroom)
		case 1: emptyChamber():break
		case 2: hiddenCavern():break
		case 3: occupiedCavern():break
		case 4: occupiedCavern():break
		case 5: thief():break
		case 6: nsCorridor():break
		case 7: ewCorridor():break
		case 8: trapDoor():break
		case 9: stairs():break
	end switch
	
	if playerdead = true then
		playerDead()
	endif
	
	pmove$=showCommands$()
	
	if pmove$="N" then
		if playery-1 = 0 then
			atWall("North")
		elsif inroom = 7 then
			ewCorridor()
		else
			move(playerx,playery-1)
		endif
	elsif pmove$="E" then
		if playerx+1 = 9 then
			atWall("East")
		elsif inroom = 6 then
			nsCorridor()
		else
			move(playerx+1,playery)
		endif
	elsif pmove$="S" then
		if playery+1 = 9 then
			atWall("South")
		elsif inroom = 7 then
			ewCorridor()
		else
			move(playerx,playery+1)
		endif
	elsif pmove$="W" then
		if playerx-1 = 0 then
			atWall("West")
		elseif inroom = 6 then
			nsCorridor()
		else
			move(playerx-1,playery)
		endif
	elsif pmove$="U" then
		goUpstairs()
	elsif pmove$="M" then
		showMap()
	elsif pmove$="Q" then
		end
	endif
	
	inroom = level(currentlevel,getIndex(playerx,playery))
	turnEnd()
	delay(2)
wend
